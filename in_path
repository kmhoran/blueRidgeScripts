#!/bin/bash
set -e
set -u

# uncomment for debugging
# set -x

# inpath - verifies that a specified program is either valid as is
# or can be found in the PATH directory
in_path()
{
    # Given a command and the PATH, tries to find the command. Returns 0 if
    # found and executable; 1 if not. Note that this temporarily modifies
    # the IFS (internal field seperator) but restores it upon completion

    local cmd=$1       local ourpath=$2       local result=1
    local oldIFS=$IFS        IFS=":"
    for directory in $ourpath;
    do
      # echo $ourpath > /dev/null
      # echo $directory
      if [ -x $directory/$cmd ] ; then
        result=0 # If we're here, we've found it
      fi
    done
    IFS=$oldIFS
    return $result
}

checkForCmdInPath()
{
  var=$1
  if [ "$var" != "" ] ; then
    if [ "${var:0:1}" = "/" ] ; then
      if [ ! -x $var ] ; then
        return 1
      fi
    elif ! in_path $var "$PATH" ; then
      return 2
    fi
  fi
}

# for execiting as a stand-alone program
if [ "$BASH_SOURCE" = "$0" ] ; then
  if [ $# -ne 1 ] ; then
    echo "Usage: $0 <command>" >&2
    exit 1
  fi
  checkForCmdInPath "$1"
  case $? in
    0 ) echo "$1 found in PATH"                       ;;
    1 ) echo "$1 not found in PATH or not executable" ;;
    2 ) echo "$1 not found in PATH"                   ;;
  esac

  exit 0
fi



